name: SonarCloud analysis

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  checksecret:
    name: Check if SONAR_TOKEN is set in GitHub secrets
    runs-on: ubuntu-latest
    outputs:
      is_SONAR_TOKEN_set: ${{ steps.checksecret_job.outputs.is_SONAR_TOKEN_set }}
    steps:
      - name: Check whether SONAR_TOKEN is set
        id: checksecret_job
        run: echo "is_SONAR_TOKEN_set=${{ env.SONAR_TOKEN != '' }}" >> $GITHUB_ENV

  build:
    needs: [checksecret]
    if: needs.checksecret.outputs.is_SONAR_TOKEN_set == 'true'
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud scanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip
          export PATH=$PATH:`pwd`/sonar-scanner-4.6.2.2472-linux/bin

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=tibisay56_placetogrow \
            -Dsonar.organization=tibisay56 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
